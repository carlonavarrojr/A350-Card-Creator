con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dat2 <- read.fwf(con2,widths=c(10,4,3,4,3,4,3,4,3), sep="",skip=4)
dat2 <- read.fwf(con2,widths=c(10,3,3,4,3,4,3,4,3), sep="",skip=4)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dat2 <- read.fwf(con2,widths=c(10,3,3,4,3,4,3,4,3), sep="",skip=4)
dat2 <- read.fwf(con2,widths=c(10,4,3,4,3,4,3,4,3),  colClasses=c('Date','numeric','numeric','numeric','numeric','numeric','numeric','numeric','numeric'),sep="",skip=4)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dat2 <- read.fwf(con2,widths=c(10,4,3,4,3,4,3,4,3),  colClasses=c('Date','numeric','numeric','numeric','numeric','numeric','numeric','numeric','numeric'),sep="",skip=4)
dat2 <- read.fwf(con2,widths=c(10,4,3,4,3,4,3,4,3),  colClasses=c('Date','numeric','numeric','numeric','numeric','numeric','numeric','numeric','numeric'),sep=c("","-"),skip=4)
dat2 <- read.fwf(con2,widths=c(10,4,3,4,3,4,3,4,3),  colClasses=c('Date','numeric','numeric','numeric','numeric','numeric','numeric','numeric','numeric'),sep="-",skip=4)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dat2 <- read.fwf(con2,widths=c(10,4,3,4,3,4,3,4,3),  colClasses=c('Date','numeric','numeric','numeric','numeric','numeric','numeric','numeric','numeric'),sep="-",skip=4)
dat2 <- read.fwf(con2,widths=c(10,6,4,3,4,3,4,3,4,3),skip=4)
dat2 <- read.fwf(con2,widths=c(10,5,4,3,4,3,4,3,4,3),skip=4)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dat2 <- read.fwf(con2,widths=c(10,5,4,3,4,3,4,3,4,3),skip=4)
head(dat2)
dat2 <- read.fwf(con2,widths=c(10,5,4,1,3,5,4,1,3,5,4,1,3,5,4,1,3),skip=4)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dat2 <- read.fwf(con2,widths=c(10,5,4,1,3,5,4,1,3,5,4,1,3,5,4,1,3),skip=4)
head(dat2)
dim(dat2)
dat2 <- read.fwf(con2,widths=c(10,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3),skip=4)
con2 = url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
dat2 <- read.fwf(con2,widths=c(10,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3),skip=4)
head(dat2)
str(dat2)
dat2[,4]
sum(dat2[,4])
library(dplyer)
library(dplyr)
dir()
ls()
library(swirl)
swirl()
swirl()
library(swirl)
ls()
install.packages(readr)
install.packages("readr)
install.packages("readr")
swirl()
libray(tidyr)
library(tidyr)
students
?gather
gather(students,sex,count,-grade)
students2
res <- gather(students2,sex_class,count)
res <- gather(students2,sex_class,count,-grade)
res
?separate
separate(res,sex_class, into = c("sex","class"))
submit()
students3
?gather
submit()
?spread
submit()
library(readr)
parse_number("class5")
submit*()
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed,failed)
sat
submit()
submit()
submit()
submit()
0
exit
rm(list = ls())
library(swirl)
install_from_swirl("Exploratory Data Anaysis")
install_from_swirl("Exploratory Data Anaysis")
library(swirl)
rm(list = ls())
swirl()
install.packages(ggplot2)
library(ggplot2)
swirl()
install.packages("ggplot2")
swirl()
head(pollution)
dim(pollution)
summary(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
str(low)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline( v = 12, lwd = 2)
abline (v = median(ppm), col = "magenta",lwd = 4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25~region, col = "red")
boxplot(pm25~region, pollution, col = "red")
par(mfrow = c(2,1), mar = c(4,4,2,1))
east <- subset(pollution, region=="east")
head(east)
hist(east$pm25)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west"))
hist(subset(pollution$pm25, region == "west"))
hist(subset(pollution,region=="west")$pm25, col = "green")
pollution %>% plot()
plot(latitude, pm25)
plot(pollution$latitude, pollution$pm25)
with(pollution, plot(latitude,pm25))
abline(h = 12)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$revion)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region == "west")
plot(west$latitude,west$pm25, main = "West")
plot(east$latitude,east$pm25, main = "East")
exi
quit
exi
quit()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)
)
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[[x.limits]]
p[["x.limits]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout= c(2,1))
head(v1)
v1
v2
myedit("plot1.R")
pathtofile("plot1.R", local = TRUE)
pathtofile("plot1.R", local=TRUE)
pathtofile("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local = TRUE)
str(diamonds)
table(diamond$color)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local = TRUE)
xyplot(price~carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color * cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(),10)
pal <- colorRamp( c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len = 6))
colorRampPalette(c("red","blue")
)
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPallate(c("red","yellow"))
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun(rgb)
?fun
?rgb
pr <- colorRampPalette(c("blue","green", 0.5))
pr <- colorRampPalette(c("blue","green", alpha = 0.5))
pr <- colorRampPalette(c("blue","green"), alpha = .5)
p3 <- colorRampPalette(c("blue","green"), alpha = .5)
p3(5)
plot(x,y,pch = 19, col = rbg(0,0.5,0.5))
plot(x,y,pch = 19, col = rgb(0,0.5,0.5))
plot(x,y,pch = 19, col = rgb(0,0.5,0.5,0.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point","smooth"))
qplot(hwy, data = mpg, color = drv)
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = drv ~ .)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point","smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy)
)
summary(g)
print(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid( . ~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid( . ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point( size = 4, alpha = 1/2, aes(color = drv))
g + geom_point(aes(color = drv), labs(title = "Swirl Rules!"), labs(x = "Displacement", y = "Hwy Milage"))
g + geom_point(aes(color = drv) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Milage"))
g + geom_point(aes(color = drv) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Milage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Milage")
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Milage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(tesdat, aes(x = myx,y = myy))
g <- ggplot(data = tesdat, aes(x = myx,y = myy))
g <- ggplot(data = testdat, aes(x = myx,y = myy))
g + geom_line()
g + geom_line(ylim(-3,3))
g + geom_line(aes(ylim(-3,3))
)
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim= c(-3,3))
g <- ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom= "density")
qplot(price, data = diamonds, geom= "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut
)
qplot(carat, price, data = diamonds, color = cut
)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = .~cut) + geom_smooth(method = "lm")
g <- ggplot(data = diamonds, aes(depth,price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoint = quantile(diamonds$carat, seq(0,1,legnth = 4), na.rm = TRUE)
cutpoint = quantile(diamonds$carat, seq(0,1,length = 4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car4 <- cut(diamonds$carat, cutpoints)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(data = diamonds, aes(depth,price))
g + goem_point(alpha = 1/3) + facet_grid(cut ~ car2)
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggpplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut
)
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
exit
bye()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?axis
?points
?lines
?llines
?text
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
?trellis.par.set
?splom
?par
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
rm(airquality)
library(airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
library(ggplot2)
library(ggplot2movies)
qplot(votes, rating, data = movies)
library(ggplot2)
library(movies)
goem_smooth()
library(ggplot2)
geom_smooth()
?panel.abline
?trellis.par.set
library(swirl)
rm(list = ls())
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
str(distxy)
a<- dist(dataFrame)
str(a)
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "red")
5
5
abline(h = 0.05, col = "blue")
12
abline(h = 0.05, col = "green")
dFsm
dist(dFsm)
hc
heatmap(dataMatrix, cm.colors(25))
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx,cy, col = c("red","orange","purple"), pch = 3, cex= 2, lwd = 2)
mdist(x,y, cx, cy)
apply(distTmp, 2, which.min)
swirl()
swirl()
swirl()
cmat
points(cx,cy, col = c("red","orange","purple"), pch = 3, cex= 2, lwd = 2)
mdist(x,y, cx, cy)
apply(distTmp, 2, which.min)
points(x,y,pch = 19, cex = 2, col = cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
dist(x,y,newCx, newCy)
dist(newCx, newCy)
dist()
mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y,pch = 19, cex = 2, col = cols[newClust2])
points(x,y,pch = 19, cex = 2, col = cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, 3)
kmObj$iter
plot(x,y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = ("black","red","green"), pch = 3, cex = 3, lwd = 3)
points(kmObj$centers, col = c("black","red","green"), pch = 3, cex = 3, lwd = 3)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x,y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% matv
matu %*% diag %*% matv
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] %*% svd1$d[1]) %*% t(svd1$v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
image(a1)
myImage(a1)
a2 <- (svd1$u[,1:2] %*% svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage( svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage( svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
exit
setwd("/media/carlo/DATA/AircraftEngineering/JITCG Replacement/")
dir()
View(a)
View(a)
library(dplyr)
library(stringr)
library(xlsx)
x <- read.csv2("var.txt",sep = ",")
pathtoOutput <- as.character(x[1,"pathtoOutput"])
pathtoAMM <- as.character(x[1,"pathtoAMM"])
pathtoMS <- as.character(x[1,"pathtoMS"])
setwd("System/")
rm(list = ls())
x <- read.csv2("var.txt",sep = ",")
pathtoOutput <- as.character(x[1,"pathtoOutput"])
pathtoAMM <- as.character(x[1,"pathtoAMM"])
pathtoMS <- as.character(x[1,"pathtoMS"])
MS <- read.xlsx(pathtoMS, sheetIndex = 1, startRow = 5, header = TRUE, colIndex = 1:16)
str(MS)
grep("OR", MS$ST)
grep("OR", MS$ST, value = TRUE)
a<- grep("OR", MS$ST)
b <- grep("\nOR\n")
b <- grep("\nOR\n", MS$ST)
?match
a
b
MS$ST[1002]
MS$ST[950]
MS$ST[1058]
grep("FH",MS$ST)
a<- grep("FH",MS$ST)
MS$ST[a]
sample <- MS$ST
sample
gsub("FH","<UNIT>FH</UNIT>", sample)
gsub("FH","<UNIT> FH</UNIT>", sample)
gsub(" FH","<UNIT>FH</UNIT>", sample)
sample <- gsub(" FH","<UNIT>FH</UNIT>", sample)
sample <- gsub(" FC","<UNIT>FC</UNIT>", sample)
sample <- gsub(" DY","<UNIT>DY</UNIT>", sample)
sample <- gsub(" MO","<UNIT>MO</UNIT>", sample)
sample <- gsub(" YR","<UNIT>YR</UNIT>", sample)
sample
sample <- gsub(" YE","<UNIT>YE</UNIT>", sample)
sample
sample <- gsub(" OR ","", sample)
sample <- gsub("\nOR\n","", sample)
sample
sample <- gsub("\nOR \n","", sample)
grep("OR", sample)
sample[grep("OR", sample)]
sample <- gsub("\n OR\n","", sample)
sample[grep("OR", sample)]
sample <- gsub(" OR\n","", sample)
sample[grep("OR", sample)]
sample[grep("[0-9]", sample)]
sample[grep("[0-9]{2,}", sample)]
sample[grep("[0-9]{5,}", sample)]
sample[grep("[0-9]{1,}", sample)]
gsub("[0-9]{1,}","<MULTIPLE>[0-9]{1,}</MULTIPLE>", sample)
gsub("[0-9]{1,}","<MULTIPLE>[0-9]+</MULTIPLE>", sample)
sample[grep("[0-9]+", sample)]
gsub("[0-9]{1,}","<MULTIPLE>\\1</MULTIPLE>", sample)
gsub("[0-9]{1,}\\b","<MULTIPLE>", sample)
gsub("[0-9]{1,}\\w+","<MULTIPLE>", sample)
gsub("[0-9]{1,}\\w+","<MULTIPLE>\\1", sample)
str_split(MS$ST,'[0-9]+')
str_split(MS$ST,'[0-9]+<')
str_split(MS$ST,'[0-9]+\<')
str_split(MS$ST,'[0-9]+\\<')
gsub("[0-9]{1,}\\w+","xxx\\1", sample)
gsub("[0-9]{1,}\\w+","xxx\\0", sample)
gsub("[0-9]{1,}\\w+","xxx\\2", sample)
